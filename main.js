!function(){"use strict";var e={};function t(e){return t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},t(e)}function n(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,r(o.key),o)}}function r(e){var n=function(e){if("object"!=t(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!=t(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==t(n)?n:n+""}e.p="";var o=function(){return e=function e(t,n,r,o,i,c){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._title=t.name,this._image=t.link,this._userId=r,this._likes=t.likes||[],this._id=t._id,this._handleLikeClick=c,this._template=n,this._handleCardClick=o,this._handleDeleteClick=i},(t=[{key:"_getTemplate",value:function(){return document.querySelector(this._template).content.querySelector(".grid__box").cloneNode(!0)}},{key:"_setEventListeners",value:function(){var e=this;this._element.querySelector(".grid__delete-button").addEventListener("click",(function(){e._handleTrashClick()})),this._element.querySelector(".grid__box-portrait-photo").addEventListener("click",(function(){e._handleImageClick()})),this._element.querySelector(".grid__content-like").addEventListener("click",(function(){e._handleLike()}))}},{key:"_handleTrashClick",value:function(){this._handleDeleteClick()}},{key:"_handleImageClick",value:function(){this._handleCardClick({name:this._title,link:this._image})}},{key:"setLike",value:function(e,t){this._isLiked=e,this._likeCard=this._element.querySelector(".grid__content-like"),this._isLiked?this._likeCard.classList.add("grid__content-like_active"):this._likeCard.classList.remove("grid__content-like_active"),this._element.querySelector(".grid__content-likeNumber").textContent=t}},{key:"_handleLike",value:function(){var e=this;this._handleLikeClick(this._id,this._isLiked).then((function(t){e.setLike(!e._isLiked,t.likes.length)})).catch((function(){}))}},{key:"deleteCard",value:function(){this._element.remove()}},{key:"addDeleteIcon",value:function(){this._element.querySelector(".grid__delete-button").classList.add("grid__delete-button_show")}},{key:"generateCard",value:function(){var e=this;this._element=this._getTemplate(),this._element.querySelector(".grid__box-portrait-photo").src=this._image,this._element.querySelector(".grid__box-portrait-photo").alt=this._title,this._element.querySelector(".grid__content-title").textContent=this._title;var t=this._likes.some((function(t){return t._id===e._userId}));return this.setLike(t,this._likes.length),this._setEventListeners(),this._element}}])&&n(e.prototype,t),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,t}();function i(e){return i="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},i(e)}function c(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,u(r.key),r)}}function u(e){var t=function(e){if("object"!=i(e)||!e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var n=t.call(e,"string");if("object"!=i(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==i(t)?t:t+""}var l=function(){return e=function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._form=n,this._formSelector=t.formSelector,this._inputSelector=t.inputSelector,this._submitButtonSelector=t.submitButtonSelector,this._inactiveButtonClass=t.inactiveButtonClass,this._inputErrorClass=t.inputErrorClass,this._errorClass=t.errorClass},(t=[{key:"_showInputError",value:function(e,t){this._errorElement=this._form.querySelector(".form__".concat(e.id,"-error")),e.classList.add(this._errorClass),t.tooShort?this._errorElement.textContent="Muito curto":t.badInput?this._errorElement.textContent="Campo inválido":t.customError?this._errorElement.textContent="Valor não aceito":t.patternMismatch?this._errorElement.textContent="Formato inválido":t.rangeOverflow?this._errorElement.textContent="Valor muito alto":t.rangeUnderflow?this._errorElement.textContent="Valor muito baixo":t.stepMismatch?this._errorElement.textContent="Valor inválido":t.tooLong?this._errorElement.textContent="Muito longo":t.typeMismatch?this._errorElement.textContent="Tipo de dado inválido":t.valueMissing&&(this._errorElement.textContent="Campo obrigatório")}},{key:"_hideInputError",value:function(e){this._errorElement=this._form.querySelector(".form__".concat(e.id,"-error")),e.classList.remove(this._errorClass),this._errorElement.textContent=""}},{key:"_hasInvalidInput",value:function(){return this._inputList.some((function(e){return!e.validity.valid}))}},{key:"_checkInputValidity",value:function(e){e.validity.valid?this._hideInputError(e):this._showInputError(e,e.validity)}},{key:"_toggleButtonState",value:function(){this._hasInvalidInput()?(this._buttonElement.classList.add(this._inactiveButtonClass),this._buttonElement.setAttribute("disabled","")):(this._buttonElement.classList.remove(this._inactiveButtonClass),this._buttonElement.removeAttribute("disabled"))}},{key:"_setEventListener",value:function(){var e=this;this._inputList=Array.from(this._form.querySelectorAll(this._inputSelector)),this._buttonElement=this._form.querySelector(this._submitButtonSelector),this._toggleButtonState(),this._inputList.forEach((function(t){t.addEventListener("input",(function(){e._checkInputValidity(t),e._toggleButtonState()}))}))}},{key:"enableValidation",value:function(){this._setEventListener()}}])&&c(e.prototype,t),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,t}();function a(e){return a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},a(e)}function s(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,f(r.key),r)}}function f(e){var t=function(e){if("object"!=a(e)||!e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var n=t.call(e,"string");if("object"!=a(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==a(t)?t:t+""}var p=function(){return e=function e(t,n){var r=t.items,o=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._items=r,this._render=o,this._selector=document.querySelector(n)},(t=[{key:"renderer",value:function(){var e=this;this._items.forEach((function(t){e._render(t)}))}},{key:"addItem",value:function(e){this._selector.append(e)}}])&&s(e.prototype,t),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,t}();function y(e){return y="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},y(e)}function d(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,v(r.key),r)}}function v(e){var t=function(e){if("object"!=y(e)||!e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var n=t.call(e,"string");if("object"!=y(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==y(t)?t:t+""}var b=function(){return e=function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._selector=document.querySelector(t),this.open=this.open.bind(this),this._selector||console.log("Erro no seletor passado")},(t=[{key:"open",value:function(){this._selector.classList.add("grid__display_opened")}},{key:"close",value:function(){this._selector.classList.remove("grid__display_opened")}},{key:"_handleEscClose",value:function(e){this.close(),removeEventListener("keydown",this._handleEscClose)}},{key:"setEventListener",value:function(){var e,t,n=this;document.addEventListener("keydown",(function(e){"Escape"===e.key&&n._handleEscClose()})),null===(e=this._selector.querySelector(".popup__closer"))||void 0===e||e.addEventListener("click",(function(){n.close()})),null===(t=this._selector.querySelector("#popupOverlay"))||void 0===t||t.addEventListener("click",(function(e){e.target===e.currentTarget&&n.close()})),this._selector.addEventListener("click",(function(e){e.target===e.currentTarget&&n.close()}))}}])&&d(e.prototype,t),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,t}();function h(e){return h="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},h(e)}function _(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,m(r.key),r)}}function m(e){var t=function(e){if("object"!=h(e)||!e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var n=t.call(e,"string");if("object"!=h(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==h(t)?t:t+""}function g(e,t,n){return t=E(t),function(e,t){if(t&&("object"==h(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(e,k()?Reflect.construct(t,n||[],E(e).constructor):t.apply(e,n))}function k(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(e){}return(k=function(){return!!e})()}function S(e,t,n,r){var o=w(E(1&r?e.prototype:e),t,n);return 2&r?function(e){return o.apply(n,e)}:o}function w(){return w="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=function(e,t){for(;!{}.hasOwnProperty.call(e,t)&&null!==(e=E(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},w.apply(null,arguments)}function E(e){return E=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},E(e)}function O(e,t){return O=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},O(e,t)}var j=function(e){function t(e,n){var r;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),(r=g(this,t,[e]))._callback=n,r._isLoading=!1,r}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&O(e,t)}(t,e),n=t,(r=[{key:"_getInputValues",value:function(){var e,t,n,r;return{name:null===(e=this._selector.querySelector(".form__input-name"))||void 0===e?void 0:e.value,link:null===(t=this._selector.querySelector(".form__input-bio"))||void 0===t?void 0:t.value,about:null===(n=this._selector.querySelector(".form__input-bio"))||void 0===n?void 0:n.value,avatar:null===(r=this._selector.querySelector(".form__input-bio"))||void 0===r?void 0:r.value}}},{key:"close",value:function(){S(t,"close",this,3)([]),this._selector.querySelector(".form__button").classList.add("form__button_disabled"),this._selector.querySelector(".form__button").setAttribute("disabled",""),this._selector.querySelector(".form").reset()}},{key:"isLoading",value:function(e){var t=this._selector.querySelector(".form__button");this._isLoading=!this._isLoading,this._isLoading?t.textContent="Salvando...":t.textContent=e}},{key:"setEventListener",value:function(){var e=this;S(t,"setEventListener",this,3)([]),this._selector.querySelector(".form").addEventListener("submit",(function(t){t.preventDefault();var n=e._getInputValues();e._callback(n),e.isLoading("Salvar")}))}}])&&_(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),n;var n,r}(b);function C(e){return C="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},C(e)}function P(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,L(r.key),r)}}function L(e){var t=function(e){if("object"!=C(e)||!e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var n=t.call(e,"string");if("object"!=C(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==C(t)?t:t+""}var q=function(){return e=function e(t){var n=t.name,r=t.bio,o=t.link;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._name=document.querySelector(n),this._bio=document.querySelector(r),this._link=document.querySelector(o)},(t=[{key:"getUserInfo",value:function(){return{name:this._name.textContent,bio:this._bio.textContent,link:this._link.src}}},{key:"setUserInfo",value:function(e){var t=e.name,n=e.about;this._name.textContent=t,this._bio.textContent=n}},{key:"setUserAvatar",value:function(e){this._link.src=e.avatar}}])&&P(e.prototype,t),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,t}();function T(e){return T="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},T(e)}function I(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,x(r.key),r)}}function x(e){var t=function(e){if("object"!=T(e)||!e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var n=t.call(e,"string");if("object"!=T(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==T(t)?t:t+""}function U(e,t,n){return t=A(t),function(e,t){if(t&&("object"==T(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(e,D()?Reflect.construct(t,n||[],A(e).constructor):t.apply(e,n))}function D(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(e){}return(D=function(){return!!e})()}function B(e,t,n,r){var o=R(A(1&r?e.prototype:e),t,n);return 2&r?function(e){return o.apply(n,e)}:o}function R(){return R="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=function(e,t){for(;!{}.hasOwnProperty.call(e,t)&&null!==(e=A(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},R.apply(null,arguments)}function A(e){return A=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},A(e)}function V(e,t){return V=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},V(e,t)}var N=function(e){function t(e){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),U(this,t,[e])}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&V(e,t)}(t,e),n=t,(r=[{key:"open",value:function(e){this._selector.querySelector(".grid__display-image").src=e.link,this._selector.querySelector(".grid__display-image").alt=e.name,this._selector.querySelector(".grid__display-title").textContent=e.name,B(t,"open",this,3)([])}},{key:"close",value:function(){B(t,"close",this,3)([])}}])&&I(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),n;var n,r}(b);function M(e){return M="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},M(e)}function J(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,z(r.key),r)}}function z(e){var t=function(e){if("object"!=M(e)||!e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var n=t.call(e,"string");if("object"!=M(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==M(t)?t:t+""}function H(e,t,n){return t=Q(t),function(e,t){if(t&&("object"==M(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(e,F()?Reflect.construct(t,n||[],Q(e).constructor):t.apply(e,n))}function F(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(e){}return(F=function(){return!!e})()}function G(e,t,n,r){var o=K(Q(1&r?e.prototype:e),t,n);return 2&r?function(e){return o.apply(n,e)}:o}function K(){return K="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=function(e,t){for(;!{}.hasOwnProperty.call(e,t)&&null!==(e=Q(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},K.apply(null,arguments)}function Q(e){return Q=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},Q(e)}function W(e,t){return W=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},W(e,t)}var X=function(e){function t(e,n){var r;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),(r=H(this,t,[e]))._deleteCallback=n,r}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&W(e,t)}(t,e),n=t,(r=[{key:"open",value:function(){G(t,"open",this,3)([])}},{key:"setEventListener",value:function(){var e=this;G(t,"setEventListener",this,3)([]),this._selector.querySelector(".form").addEventListener("submit",(function(t){t.preventDefault(),e._deleteCallback(),e.close()}))}}])&&J(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),n;var n,r}(b);function Y(e){return Y="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},Y(e)}function Z(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function $(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?Z(Object(n),!0).forEach((function(t){ee(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):Z(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function ee(e,t,n){return(t=ne(t))in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function te(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,ne(r.key),r)}}function ne(e){var t=function(e){if("object"!=Y(e)||!e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var n=t.call(e,"string");if("object"!=Y(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==Y(t)?t:t+""}var re=function(){return e=function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._baseUrl=t,this._options=n},(t=[{key:"getInitialCards",value:function(){return fetch("".concat(this._baseUrl,"/cards"),this._options).then((function(e){return e.ok?e.json():Promise.reject("Error manual: ".concat(e.status))})).catch((function(e){console.log("Vix paizao, deu ruim ó: ".concat(e))}))}},{key:"getUser",value:function(){return fetch("".concat(this._baseUrl,"/users/me"),this._options).then((function(e){return e.ok?e.json():Promise.reject("Vixe amigo, erro ó: ".concat(e.status))}))}},{key:"setNewUser",value:function(e){fetch("".concat(this._baseUrl,"/users/me"),$($({method:"PATCH"},this._options),{},{body:JSON.stringify({name:e.name,about:e.about})}))}},{key:"setNewAvatar",value:function(e){return fetch("".concat(this._baseUrl,"/users/me/avatar"),$($({method:"PATCH"},this._options),{},{body:JSON.stringify({avatar:e.link})}))}},{key:"setNewCard",value:function(e){return fetch("".concat(this._baseUrl,"/cards"),$($({method:"POST"},this._options),{},{body:JSON.stringify({name:e.name,link:e.link})})).then((function(e){return e.ok?e.json():Promise.reject("Post não enviado corretamente: ".concat(e.status))})).catch((function(e){console.log("Erro ao enviar novo Card: ".concat(e))}))}},{key:"apiLike",value:function(e){return fetch("".concat(this._baseUrl,"/cards/likes/").concat(e),$({method:"PUT"},this._options)).then((function(e){return e.ok?e.json():Promise.reject("Erro de like: ".concat(e.status))}))}},{key:"apiDislike",value:function(e){return fetch("".concat(this._baseUrl,"/cards/likes/").concat(e),$({method:"DELETE"},this._options)).then((function(e){return e.ok?e.json():Promise.reject("Erro de dislike: ".concat(e.status))}))}},{key:"deleteCard",value:function(e){fetch("".concat(this._baseUrl,"/cards/").concat(e),$({method:"DELETE"},this._options)).then((function(e){console.log("Delete feito: ".concat(e))}))}}])&&te(e.prototype,t),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,t}(),oe=e.p+"cc6deb7349d71ca7a583.png",ie=new re("https://around.nomoreparties.co/v1/web-ptbr-cohort-12",{headers:{authorization:"c5f89901-0404-4ab2-ab83-c8e3c6dc51b4","Content-Type":"application/json"}});document.getElementById("closeIcon").src=oe;var ce=document.querySelector(".profile"),ue=ce.querySelector(".profile__button-add-post"),le=ce.querySelector(".profile__button-open-form"),ae=ce.querySelector(".profile__edit-pencil");ie.getUser().then((function(e){var t=e._id;ie.getInitialCards().then((function(e){var n=new p({items:e,renderer:function(e){var r=new o(e,"#grid",t,(function(e){var t=new N(".grid__display");t.open(e),t.setEventListener()}),(function(){var t=new X("#popupDeletePost",(function(){ie.deleteCard(e._id),r.deleteCard()}));t.open(),t.setEventListener()}),(function(){return e.likes.some((function(e){return e._id===t}))?ie.apiDislike(r._id).then((function(t){r.setLike(!1,t.likes.length),e.likes=t.likes})):ie.apiLike(r._id).then((function(t){r.setLike(!0,t.likes.length),e.likes=t.likes}))}));ie.getUser().then((function(t){t._id===e.owner._id&&r.addDeleteIcon()}));var i=r.generateCard(e);n.addItem(i)}},".grid");n.renderer()}))}));var se=new q({name:".profile__info-name",bio:".profile__info-bio",link:".profile__photo"});ie.getUser().then((function(e){se.setUserInfo(e),se.setUserAvatar(e)}));var fe=new j("#popupPost",(function(e){ie.getUser().then((function(t){var n=t._id,r=new o(e,"#grid",n,(function(e){var t=new N(".grid__display");t.open(e),t.setEventListener()}),(function(){}),(function(){})),i=document.querySelector(".grid");ie.setNewCard(e).then((function(e){r._id=e._id,r._handleDeleteClick=function(){var e=new X("#popupDeletePost",(function(){ie.deleteCard(r._id),r.deleteCard()}));e.open(),e.setEventListener()},r._handleLikeClick=function(){return e.likes.some((function(e){return e._id===n}))?ie.apiDislike(r._id).then((function(t){r.setLike(!1,t.likes.length),e.likes=t.likes})):ie.apiLike(r._id).then((function(t){r.setLike(!0,t.likes.length),e.likes=t.likes}))};var t=r.generateCard(e);ie.getUser().then((function(t){t._id===e.owner._id&&r.addDeleteIcon()})),i.prepend(t),fe.close(),fe.isLoading("Crie")}))}))}));fe.setEventListener();var pe=new j("#popupUser",(function(e){se.setUserInfo(e),ie.setNewUser(e),pe.close(),pe.isLoading("Salvar")}));pe.setEventListener();var ye=new j("#popupUserAvatar",(function(e){se.setUserAvatar(e),ie.setNewAvatar(e),ye.close(),ye.isLoading("Salvar")}));ye.setEventListener(),ae.addEventListener("click",(function(){ye.open()})),le.addEventListener("click",(function(){var e=se.getUserInfo();document.querySelector(".form__input-name").value=e.name,document.querySelector(".form__input-bio").value=e.bio,pe.open()})),ue.addEventListener("click",(function(){fe.open()}));var de={formSelector:".form",inputSelector:".form__input",submitButtonSelector:".form__button",inactiveButtonClass:"form__button_disabled",inputErrorClass:"form__input-error-message",errorClass:"form__input-error"};Array.from(document.querySelectorAll(de.formSelector)).forEach((function(e){new l(de,e).enableValidation()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,